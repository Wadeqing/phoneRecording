package com.sinocall.phonerecordera.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sinocall.phonerecordera.dao.CallLogBean;
import com.sinocall.phonerecordera.dao.ConstactBean;
import com.sinocall.phonerecordera.dao.FileDownloadBean;
import com.sinocall.phonerecordera.dao.ReCordingBean;

import com.sinocall.phonerecordera.greendao.gen.CallLogBeanDao;
import com.sinocall.phonerecordera.greendao.gen.ConstactBeanDao;
import com.sinocall.phonerecordera.greendao.gen.FileDownloadBeanDao;
import com.sinocall.phonerecordera.greendao.gen.ReCordingBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig callLogBeanDaoConfig;
    private final DaoConfig constactBeanDaoConfig;
    private final DaoConfig fileDownloadBeanDaoConfig;
    private final DaoConfig reCordingBeanDaoConfig;

    private final CallLogBeanDao callLogBeanDao;
    private final ConstactBeanDao constactBeanDao;
    private final FileDownloadBeanDao fileDownloadBeanDao;
    private final ReCordingBeanDao reCordingBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        callLogBeanDaoConfig = daoConfigMap.get(CallLogBeanDao.class).clone();
        callLogBeanDaoConfig.initIdentityScope(type);

        constactBeanDaoConfig = daoConfigMap.get(ConstactBeanDao.class).clone();
        constactBeanDaoConfig.initIdentityScope(type);

        fileDownloadBeanDaoConfig = daoConfigMap.get(FileDownloadBeanDao.class).clone();
        fileDownloadBeanDaoConfig.initIdentityScope(type);

        reCordingBeanDaoConfig = daoConfigMap.get(ReCordingBeanDao.class).clone();
        reCordingBeanDaoConfig.initIdentityScope(type);

        callLogBeanDao = new CallLogBeanDao(callLogBeanDaoConfig, this);
        constactBeanDao = new ConstactBeanDao(constactBeanDaoConfig, this);
        fileDownloadBeanDao = new FileDownloadBeanDao(fileDownloadBeanDaoConfig, this);
        reCordingBeanDao = new ReCordingBeanDao(reCordingBeanDaoConfig, this);

        registerDao(CallLogBean.class, callLogBeanDao);
        registerDao(ConstactBean.class, constactBeanDao);
        registerDao(FileDownloadBean.class, fileDownloadBeanDao);
        registerDao(ReCordingBean.class, reCordingBeanDao);
    }
    
    public void clear() {
        callLogBeanDaoConfig.clearIdentityScope();
        constactBeanDaoConfig.clearIdentityScope();
        fileDownloadBeanDaoConfig.clearIdentityScope();
        reCordingBeanDaoConfig.clearIdentityScope();
    }

    public CallLogBeanDao getCallLogBeanDao() {
        return callLogBeanDao;
    }

    public ConstactBeanDao getConstactBeanDao() {
        return constactBeanDao;
    }

    public FileDownloadBeanDao getFileDownloadBeanDao() {
        return fileDownloadBeanDao;
    }

    public ReCordingBeanDao getReCordingBeanDao() {
        return reCordingBeanDao;
    }

}
